{"version":3,"sources":["logo.svg","components/Login-Component.js","components/Register-Component.js","helper/ResponseHandler.js","components/Profile-Component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginForm","props","schema","yup","shape","Email","required","email","password","max","useForm","validationSchema","register","handleSubmit","errors","login","to","className","src","process","alt","width","onSubmit","data","fetch","apiEndpoint","method","headers","Accept","body","JSON","stringify","then","res","json","token","expireDate","Date","setTime","getTime","localStorage","setItem","setCookie","expires","path","httpOnly","htmlFor","id","name","type","placeholder","ref","message","style","justifyContent","RegisterForm","passwordConfirmation","oneOf","phoneNumber","typeError","test","val","toString","length","numberPhone","console","log","handleResponse","response","text","parse","ok","indexOf","status","removeItem","window","location","reload","Profile","useEffect","cookie","resdata","setNewData","margin","App","getItem","useCookies","cookies","setAuthCookie","cookieName","cookieValue","options","authCookie","useState","setData","exact","render","Boolean","hostname","match","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.2c7b2755.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { Redirect } from \"react-router-dom\";\n\nconst LoginForm = (props) => {\n    const schema = yup.object().shape({\n        Email: yup.string().required().email(),\n        password: yup.string().required().max(45),\n    });\n\n    const onSubmit = (data) => {\n        // truyen xuong back-end + render /profile\n        fetch(props.apiEndpoint + \"/users/login\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                email: data.Email,\n                password: data.password,\n            }),\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.data && res.data.token != null) {\n                    let expireDate = new Date();\n                    expireDate.setTime(expireDate.getTime() + 15 * 60 * 1000); // 15 min expiration\n                    localStorage.setItem(\"login\", \"true\");\n                    props.setCookie(\"authentication\", res.data.token, {\n                        expires: expireDate,\n                        path: \"/\",\n                        httpOnly: false,\n                    });\n                }\n            });\n    };\n\n    const { register, handleSubmit, errors } = useForm({\n        validationSchema: schema,\n    });\n\n    if (props.login) {\n        return <Redirect to=\"/profile\"></Redirect>;\n    } else\n        return (\n            <div className=\"h-screen flex justify-center items-center flex-col\">\n                <div className=\"flex my-3 items-center\">\n                    <img\n                        src={`${process.env.PUBLIC_URL}/dice.png`}\n                        alt=\"logo\"\n                        width=\"50\"\n                    ></img>\n                    <h2 className=\"ml-3 text-2xl text-gray-700 font-bold\">\n                        Random English\n                    </h2>\n                </div>\n                <form\n                    className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n                    onSubmit={handleSubmit(onSubmit)}\n                >\n                    <div className=\"mb-4\">\n                        <label\n                            className=\"block text-gray-700 text-sm font-bold mb-2\"\n                            htmlFor=\"Email\"\n                        >\n                            Email\n                        </label>\n                        <input\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            id=\"Email\"\n                            name=\"Email\"\n                            type=\"text\"\n                            placeholder=\"Email\"\n                            ref={register}\n                        />\n                        <p className=\"text-left text-red-700 text-xs\">\n                            {errors?.Email?.message}\n                        </p>\n                    </div>\n                    <div className=\"mb-6\">\n                        <label\n                            className=\"block text-gray-700 text-sm font-bold mb-2\"\n                            htmlFor=\"password\"\n                        >\n                            Password\n                        </label>\n                        <input\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            id=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"******************\"\n                            ref={register}\n                        />\n                        <p className=\"text-left text-red-700 text-xs\">\n                            {errors?.password?.message}\n                        </p>\n                    </div>\n                    <div\n                        className=\"flex items-center justify-between\"\n                        style={{ justifyContent: \"center\" }}\n                    >\n                        <button\n                            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                            type=\"submit\"\n                        >\n                            Login\n                        </button>\n                    </div>\n                </form>\n                <p className=\"text-center text-gray-500 text-xs\">\n                    &copy;2020 Acme Corp. All rights reserved.\n                </p>\n            </div>\n        );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { Redirect } from \"react-router-dom\";\n\nconst RegisterForm = (props) => {\n    const schema = yup.object().shape({\n        Email: yup.string().required().email(),\n\n        password: yup.string().required().max(45),\n\n        passwordConfirmation: yup\n            .string()\n            .required()\n            .oneOf([yup.ref(\"password\"), null], \"Password must match\"),\n\n        name: yup.string().required().max(20),\n\n        phoneNumber: yup\n            .number()\n            .typeError(\"Must be a number\")\n            .required()\n            .test(\n                \"minlen\",\n                \"Must be more than 8 characters\",\n                (val) => val.toString().length >= 8\n            )\n            .test(\n                \"maxlen\",\n                \"Must be less than 15 characters\",\n                (val) => val.toString().length <= 15\n            ),\n    });\n\n    const onSubmit = (data) => {\n        // truyen xuong back-end + render /profile\n        const register = fetch(props.apiEndpoint + \"/users/register\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                email: data.Email,\n                password: data.password,\n                name: data.name,\n                numberPhone: data.phoneNumber.toString(),\n            }),\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                console.log(res);\n                if (res.data && res.data.token != null) {\n                    let expireDate = new Date();\n                    expireDate.setTime(expireDate.getTime() + 15 * 60 * 1000); // 15 min expiration\n                    localStorage.setItem(\"login\", \"true\");\n                    props.setCookie(\"authentication\", res.data.token, {\n                        expires: expireDate,\n                        path: \"/\",\n                        httpOnly: false,\n                    });\n                }\n            });\n    };\n\n    const { register, handleSubmit, errors } = useForm({\n        validationSchema: schema,\n    });\n\n    if (props.login) {\n        return <Redirect to=\"/profile\"></Redirect>;\n    } else\n        return (\n            <div className=\"h-screen flex justify-center items-center flex-col\">\n                <div className=\"flex my-3 items-center\">\n                    <img\n                        src={`${process.env.PUBLIC_URL}/dice.png`}\n                        alt=\"logo\"\n                        width=\"50\"\n                    ></img>\n                    <h2 className=\"ml-3 text-2xl text-gray-700 font-bold\">\n                        Random English\n                    </h2>\n                </div>\n\n                <form\n                    className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n                    onSubmit={handleSubmit(onSubmit)}\n                >\n                    <div className=\"mb-4\">\n                        <label\n                            className=\"block text-gray-700 text-sm font-bold mb-2\"\n                            htmlFor=\"Email\"\n                        >\n                            Email\n                        </label>\n                        <input\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            id=\"Email\"\n                            name=\"Email\"\n                            type=\"text\"\n                            placeholder=\"example@gmail.com\"\n                            ref={register}\n                        />\n                        <p className=\"text-left text-red-700 text-xs\">\n                            {errors?.Email?.message}\n                        </p>\n                    </div>\n                    <div className=\"mb-4\">\n                        <label\n                            className=\"block text-gray-700 text-sm font-bold mb-2\"\n                            htmlFor=\"password\"\n                        >\n                            Password\n                        </label>\n                        <input\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700  leading-tight focus:outline-none focus:shadow-outline\"\n                            name=\"password\"\n                            id=\"password\"\n                            type=\"password\"\n                            placeholder=\"******************\"\n                            ref={register}\n                        />\n                        <p className=\"text-left text-red-700 text-xs\">\n                            {errors?.password?.message}\n                        </p>\n                    </div>\n                    <div className=\"mb-4\">\n                        <label\n                            className=\"block text-gray-700 text-sm font-bold mb-2\"\n                            htmlFor=\"passwordConfirmation\"\n                        >\n                            Re-Password\n                        </label>\n                        <input\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700  leading-tight focus:outline-none focus:shadow-outline\"\n                            name=\"passwordConfirmation\"\n                            id=\"passwordConfirmation\"\n                            type=\"password\"\n                            placeholder=\"******************\"\n                            ref={register}\n                        />\n                        <p className=\"text-left text-red-700 text-xs\">\n                            {errors?.passwordConfirmation?.message}\n                        </p>\n                    </div>\n                    <div className=\"mb-4\">\n                        <label\n                            className=\"block text-gray-700 text-sm font-bold mb-2\"\n                            htmlFor=\"name\"\n                        >\n                            Full Name\n                        </label>\n                        <input\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700  leading-tight focus:outline-none focus:shadow-outline\"\n                            name=\"name\"\n                            id=\"name\"\n                            type=\"text\"\n                            placeholder=\"Kha Tran Minh\"\n                            ref={register}\n                        />\n                        <p className=\"text-left text-red-700 text-xs\">\n                            {errors?.name?.message}\n                        </p>\n                    </div>\n                    <div className=\"mb-4\">\n                        <label\n                            className=\"block text-gray-700 text-sm font-bold mb-2\"\n                            htmlFor=\"phoneNumber\"\n                        >\n                            Phone Number (Raw numbers)\n                        </label>\n                        <input\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700  leading-tight focus:outline-none focus:shadow-outline\"\n                            name=\"phoneNumber\"\n                            id=\"phoneNumber\"\n                            type=\"text\"\n                            placeholder=\"0482246257\"\n                            ref={register}\n                        />\n                        <p className=\"text-left text-red-700 text-xs\">\n                            {errors?.phoneNumber?.message}\n                        </p>\n                    </div>\n                    <div\n                        className=\"flex items-center justify-between\"\n                        style={{ justifyContent: \"center\" }}\n                    >\n                        <button\n                            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                            type=\"submit\"\n                        >\n                            Register\n                        </button>\n                    </div>\n                </form>\n                <p className=\"text-center text-gray-500 text-xs\">\n                    &copy;2020 Acme Corp. All rights reserved.\n                </p>\n            </div>\n        );\n};\n\nexport default RegisterForm;\n","\nfunction handleResponse(response){\n    return response.text().then(text => {\n        console.log(text)\n        const res = JSON.parse(text);\n        if (!response.ok) {\n            if ([400,401, 403].indexOf(response.status) !== -1) {\n                localStorage.removeItem(\"login\");\n                window.location.reload();\n            }\n            return false;\n        }\n        return res.data;\n    });\n}\n\nexport default handleResponse;","import React,{useEffect} from 'react';\nimport handleResponse from '../helper/ResponseHandler';\nimport { Redirect } from 'react-router-dom';\n\nconst Profile = (props)=>{\n  useEffect(() => {\n    fetch(props.apiEndpoint+'/users/profile', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + props.cookie,\n      },\n      })\n      .then(res => handleResponse(res))\n      .then(resdata => {\n        console.log(resdata);\n        props.setNewData(resdata);\n      })\n  }, []);\n\n  // if authorization fails\n  if(props.data === false)\n    return <Redirect to=\"/login\"></Redirect>\n  else // render the profile page\n  return (<div className=\"w-full max-w-xs\" style={{margin: '50px auto'}}>\n    <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\" >\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-500 text-sm font-bold mb-2\">\n            Email\n          </label>\n          <p className=\"block text-gray-700 text-sm font-bold mb-2\">\n            {props.data && props.data['email']}\n          </p>\n        </div>\n        <div className=\"mb-4\">\n         <label className=\"block text-gray-500 text-sm font-bold mb-2\">\n            Full Name\n          </label>\n          <p className=\"block text-gray-700 text-sm font-bold mb-2\">\n            {props.data && props.data['name']}\n          </p>\n        </div>\n        <div className=\"mb-4\">\n         <label className=\"block text-gray-500 text-sm font-bold mb-2\">\n            Phone Number\n          </label>\n          <p className=\"block text-gray-700 text-sm font-bold mb-2\">\n            {props.data && props.data['numberPhone']}\n          </p>\n        </div>\n      </form>\n      <p className=\"text-center text-gray-500 text-xs\">\n        &copy;2020 Acme Corp. All rights reserved.\n      </p>\n    </div>\n  )\n}\n\nexport default Profile;\n\n","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport './css/tailwind.css'\nimport  LoginForm  from \"./components/Login-Component\";\nimport RegisterForm from \"./components/Register-Component\";\nimport Profile from \"./components/Profile-Component\";\nimport {useCookies} from \"react-cookie\"\n\nfunction App() {\n  const login = (localStorage.getItem(\"login\")==='true');\n  const apiEndpoint = \"https://random-english.herokuapp.com/api\";\n  const [cookies,setCookie,removeCookie] = useCookies(['authentication']);\n\n  const setAuthCookie = (cookieName,cookieValue,options) => setCookie(cookieName,cookieValue,options);\n  const authCookie = cookies['authentication'];\n  const [data,setData] = useState(null);\n  const setNewData = (data) => setData(data);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path='/login' render={(props) => <LoginForm login={login} setCookie={setAuthCookie} apiEndpoint={apiEndpoint}></LoginForm>} />\n        <Route exact path='/profile' render={props => (\n            login?\n                <Profile cookie={authCookie} data={data} setNewData={setNewData} apiEndpoint={apiEndpoint}/>\n            : <Redirect to=\"/login\" />\n        )} />\n        <Route exact path='/Register'  render={(props) => <RegisterForm login={login} setCookie={setAuthCookie} apiEndpoint={apiEndpoint}></RegisterForm>} />\n        <Route path='/' render={props => (\n            login?\n                <Profile cookie={authCookie} data={data} setNewData={setNewData} apiEndpoint={apiEndpoint}/>\n            : <Redirect to=\"/login\" />\n        )} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter basename=\"random-english-fe\">\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}